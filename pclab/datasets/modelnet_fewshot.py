# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/02.4_datasets_modelnet40_fewshot.ipynb.

# %% auto 0
__all__ = ['ModelNetFewShot']

# %% ../../nbs/02.4_datasets_modelnet40_fewshot.ipynb 4
import os
import numpy as np
import pickle

from torch.utils.data import Dataset
from torch.utils.data import DataLoader
from ..transforms import *

# %% ../../nbs/02.4_datasets_modelnet40_fewshot.ipynb 5
class ModelNetFewShot(Dataset):
    'Dataset to access the few shot classification data for the ModelNet40 dataset.'
    def __init__(self, 
                 path,
                 split='train',
                 way =5, 
                 shot=10, 
                 fold=0,
                 transforms=[]
                ):
        
        assert split in ['train', 'test'], 'Split should either be `train` or `test`'
        assert way in [5, 10]
        assert shot in [10, 20]
        assert fold in list(range(10))
        
        # just a reminder that the data also contain normal information
        self.use_normals=False

        self.split=split
        self.way=way
        self.shot=shot
        self.fold=fold
        self.transforms=transforms
        
        self.pickle_path = os.path.join(path, 'ModelNetFewshot', f'{self.way}way_{self.shot}shot', f'{self.fold}.pkl')
        
        with open(self.pickle_path, 'rb') as f:
            self.data = pickle.load(f)[self.split]
        
    def __len__(self):
        return len(self.data)
    
    def __getitem__(self, idx):
                
        points, label, _ = self.data[idx]
        
        # points has normal information, but we only use the point coordinates
        points = points[:, :3]
        
        for t in self.transforms:
            points = t(points)
            
        return points, label
